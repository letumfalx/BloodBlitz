<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blood_pl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//sprite settings
pl_spr[dir_left, 0] = 0;
pl_spr[dir_left, 1] = 1;
pl_spr[dir_right, 0] = 2;
pl_spr[dir_right, 1] = 3;
pl_spr[dir_center, 0] = 4;
pl_spr[dir_center, 1] = 5;

pl_spr_curr = 0;
alarm[11] = 15;

wallCollision[FORCE] = 0;
wallCollision[DIR] = dir_center;
wallCollision[COLLISION] = false;
wallCollision[10] = 0;
wallCollision[11] = 0;

x = game_x + game_width/2;
y = game_y + 0.35 * game_height;

colBoth[0] = false;
colBoth[1] = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(pl_spr_curr == 0) pl_spr_curr = 1;
else  pl_spr_curr = 0;

alarm[11] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!wallCollision[COLLISION]) {
    if(!pause) {
        x += mouse_dir[FORCE];
    }
} else {
    var spd = wallCollision[FORCE]/60;
    if(wallCollision[DIR] == dir_left) {
        x -= spd;
    } else {
        x += spd;
    }
    wallCollision[11] += spd;
    if(wallCollision[11] &gt;= wallCollision[FORCE]) {
        wallCollision[COLLISION] = false;
    }
}


if(debugging) {
    if(keyboard_check(ord('O'))) {
        player.image_xscale -= 0.01;
        player.image_yscale -= 0.01;
    }
    if(keyboard_check(ord('P'))) {
        player.image_xscale += 0.01;
        player.image_yscale += 0.01;
    }
}

if(colBoth[0] &amp;&amp; colBoth[1]) {
    effect_create_above(ef_explosion, x, y, sprite_width * image_xscale, c_fuchsia);
} else {
    colBoth[0] = false;
    colBoth[1] = false;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall_mir">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>colBoth[1] = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>colBoth[0] = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_index = pl_spr[mouse_dir[DIR], pl_spr_curr];
surface_set_target(ui_game);

image_xscale = scr_blood_get_scale();
image_yscale = image_xscale;

if(!wallCollision[COLLISION]) {
    image_angle = 0;
    image_index = pl_spr[mouse_dir[DIR], pl_spr_curr];
} else {
    var angle = 1.5;
    if(wallCollision[DIR] == dir_left) {
        image_index = pl_spr[dir_right, pl_spr_curr];
        if(wallCollision[10] == 0) {
            image_angle -= angle;
            if(image_angle &lt;= -45) {
                wallCollision[10] = 1;
            }
        } else {
            image_angle += angle;
            if(image_angle &gt;= 0) {
                wallCollision[10] = 0;
                image_angle = 0;
            }
        }
    } else {
        image_index = pl_spr[dir_left, pl_spr_curr];
        if(wallCollision[10] == 0) {
            image_angle += angle;
            if(image_angle &gt;= 45) {
                wallCollision[10] = 1;
            }
        } else {
            image_angle -= angle;
            if(image_angle &lt;= 0) {
                wallCollision[10] = 0;
                image_angle = 0;
            }
        }
    }
}

//draw_sprite(sprite_index, image_index, x - game_x, y - game_y);
draw_sprite_ext(sprite_index, image_index, x - game_x, y - game_y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);

surface_reset_target();


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
