<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
view_xview[0] = 0;
view_yview[0] = 0;
view_xport[0] = 0;
view_yport[0] = 0;
view_wview[0] = 480;
view_hview[0] = 270;
view_wport[0] = 480;
view_hport[0] = 270;

if(!view_visible[0]) view_visible[0] = true;
if(!view_enabled) view_enabled = true;

surf = surface_create(room_width, room_height);

width = 480;
height = 270;

index = 0;
moving = false;
cur_dir = dir_center;


controls_sprite = spr_controls;
controls_image = 0;
controls_x = 0;
controls_y = 0;
alarm[0] = 120;

blooddrop_sprite = spr_blood_pl;
blooddrop_image = 0;
health = 65;
blooddrop_scale = scr_scale_to(0, scr_player_get_scale());
blooddrop_x = 480;
blooddrop_y = 0;
blooddrop_hd = 1;
alarm[1] = 60;

bloodpressure_x = 480 * 2;
bloodpressure_y = 0;


fruit_angle = 0;
fruit_dir = 1;
fruit_image = 0;
alarm[2] = 45;

banana_x = 480 * 3;
banana_y = 0;

orange_x = 480 * 4;
orange_y = 0;

grapes_x = 480 * 5;
grapes_y = 0;

pizza_x = 480 * 6;
pizza_y = 0;

bacteria_x = 480 * 7;
bacteria_y = 0;

nutrient_bacteria_x = 480 * 8;
nutrient_bacteria_y = 0;

cannibal_bacteria_x = 480 * 9;
cannibal_bacteria_y = 0;










</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
fruit_image += 1;
if(fruit_image &gt;= sprite_get_number(spr_banana)) fruit_image = 0;

alarm[2] = 45;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(blooddrop_image == 0) blooddrop_image = 1;
else blooddrop_image = 0;

alarm[1] = 60;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// for controls
controls_image++;

switch(controls_image) {
    case 0:
    case 3:
    case 6:
        alarm[0] = 120;
        break;
    case 1:
    case 2:
    case 4:
    case 5:
        alarm[0] = 2.5;
        break;
    default:
        controls_image = 0;
        alarm[0] = 120;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

var md = scr_get_mouse_dir();
md = md[DIR];
var step = 10;

if(!moving) {
    if(md == dir_left &amp;&amp; index &gt; 0) {
        index -= 1;
        moving = true;
        cur_dir = dir_left;
    } else if(md == dir_right &amp;&amp; index &lt; 9) {
        index += 1;
        moving = true;   
        cur_dir = dir_right;
    }
}

if(moving) {
    if(cur_dir = dir_right) {
        view_xview[0] += step;
        if(view_xview[0] &gt;= index * 480) {
            view_xview[0] = index * 480;
            cur_dir = dir_center;
            moving = false;
        }
    } else if(cur_dir = dir_left) {
        view_xview[0] -= step;
        if(view_xview[0] &lt;= index * 480) {
            view_xview[0] = index * 480;
            cur_dir = dir_center;
            moving = false;
        }   
    }
}


health += blooddrop_hd;
if(health &gt;= 100) {
    blooddrop_hd = -1;
} else if(health &lt;= 0) {
    blooddrop_hd = 1;
}

fruit_angle += fruit_dir;
if(fruit_angle &gt;= 30) {
    fruit_dir = -1;
} else if(fruit_angle &lt;= -30) {
    fruit_dir = 1;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

room_goto(rm_menu);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_visible[0] = false;
view_enabled = false;

if(surface_exists(surf)) surface_free(surf);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(!surface_exists(surf)) surf = surface_create(room_width, room_height);

surface_set_target(surf);
draw_clear_alpha(background_color, 1);


//draw controls
draw_sprite_ext(controls_sprite, controls_image, controls_x, controls_y, 1, 1, 0, c_white, 1);
draw_sprite(spr_controls_text, 0, controls_x + width/2, controls_y + height * 0.9);

//draw blooddrop
draw_sprite_ext(blooddrop_sprite, blooddrop_image, blooddrop_x + width * 0.25, blooddrop_y + height * 0.4, scr_blood_get_scale(), scr_blood_get_scale(), 0, c_white, 1);

var draw_w = 0.25 * width;
var draw_h = height * 0.05;
var draw_x = blooddrop_x + width * 0.25 - draw_w * 0.5;
var draw_y = 0.75 * height - draw_h/2;

if(health &gt;= 100) draw_set_color(c_blue);
else if(health &gt;= 50) draw_set_color(c_green);
else if(health &gt;= 25) draw_set_color(c_yellow);
else draw_set_color(c_red);
draw_rectangle(draw_x, draw_y, (health/100) * draw_w + draw_x, draw_y + draw_h, 0);
draw_sprite(spr_text, 0, blooddrop_x + width/2, blooddrop_y);

//draw blood pressure

draw_sprite(spr_bp_im, 0, bloodpressure_x, bloodpressure_y);
draw_sprite(spr_text, 1, bloodpressure_x + width/2, bloodpressure_y);

//draw banana
draw_sprite(spr_text, 2, banana_x + width/2, banana_y);
draw_sprite_ext(spr_banana, fruit_image, 
                banana_x + width/4 - sprite_get_width(spr_banana)/2,
                banana_y + height/2, 1, 1, fruit_angle, c_white, 1);
                

//draw orange
draw_sprite(spr_text, 3, orange_x + width/2, orange_y);
draw_sprite_ext(spr_orange, fruit_image, 
                orange_x + width/4 - sprite_get_width(spr_orange)/2,
                orange_y + height/2, 1, 1, fruit_angle, c_white, 1);
                
//draw grapes
draw_sprite(spr_text, 4, grapes_x + width/2, grapes_y);
draw_sprite_ext(spr_grapes, fruit_image, 
                grapes_x + width/4 - sprite_get_width(spr_grapes)/2,
                grapes_y + height/2, 1, 1, fruit_angle, c_white, 1);


//draw pizza
draw_sprite(spr_text, 5, pizza_x + width/2, pizza_y);
draw_sprite_ext(spr_pizza, 0, 
                pizza_x + width/4 - sprite_get_width(spr_pizza)/2,
                pizza_y + height/2, 1, 1, fruit_angle, c_white, 1);

//draw bacteria
draw_sprite(spr_text, 6, bacteria_x + width/2, bacteria_y);
draw_sprite_ext(spr_bacteria_2, 0, 
                bacteria_x + width/4 - sprite_get_width(spr_bacteria_2)/2 + 15,
                bacteria_y + height/2, 1, 1, fruit_angle, c_white, 1);

//draw nutrient bacteria
draw_sprite(spr_text, 7, nutrient_bacteria_x + width/2, nutrient_bacteria_y);
draw_sprite_ext(spr_bacteria_1, 0, 
                nutrient_bacteria_x + width/4 - sprite_get_width(spr_bacteria_1)/2 + 15,
                nutrient_bacteria_y + height/2, 1, 1, fruit_angle, c_white, 1);

//draw cannibal bacteria
draw_sprite(spr_text, 8, cannibal_bacteria_x + width/2, cannibal_bacteria_y);
draw_sprite_ext(spr_bacteria_3, 0, 
                cannibal_bacteria_x + width/4 - sprite_get_width(spr_bacteria_3)/2 + 15,
                cannibal_bacteria_y + height/2, 1, 1, fruit_angle, c_white, 1);


surface_reset_target();



draw_surface(surf, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
